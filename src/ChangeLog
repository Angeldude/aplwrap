2014-10-03  David B. Lamkins  <dlamkins@kolvir>

	* edit.c (trim_length, edit_function_cb): Strip trailing blanks
	from function lines.

2014-10-03  David B. Lamkins  <david@lamkins.net>

	* edit.c (set_status_line): Correct line count in status line.

2014-10-03  David B. Lamkins  <david@lamkins.net>

	* edit.h (struct buffer_s): Removed modified member; we now rely
	upon the GtkTextBuffer's modification query.

	* edit.c (set_status_line, edit_mark_set_event, edit_save_cb)
	(edit_delete_real, edit_key_press_event, edit_function_cb, )
	(edit_object): Line and column numbers are now displayed in origin
	0. Line and column numbers update in sync with cursor movement,
	whether via keyboard or mouse. Edit window opens with cursor at
	<0,0>.

2014-10-01  David Lamkins <david@lamkins.net>

	No file details for 12 patches covering the following fixes:

	1. [lamkins_prompt_cursor_home.patch] Generalize the
	home-to-end-of-prompt behavior for all APL prompts; not just the
	six-space prompt.

	2. [lamkins_output_perror.patch] Correct a bug in error checking
	for the four output routines and add a perror() call to each to
	report unexpected errors.

	3. [lamkins_row_count_tweak.patch] Reduce the view height by its
	borders when calculating the number of full rows in the view.

	4. [lamkins_static_quitting.patch] Scope issue: quitting should
	have been static in apl.c.

	5. [lamkins_io_rework.patch] Fixed handling of EAGAIN in the
	various read() routines. Factored out the common read loops into a
	new reader() routine.

	6. [lamkins_empty_prompt.patch] Fixed an issue that caused an
	empty quote-quad prompt to make APLwrap's input handling
	misbehave.

	7. [lamkins_empty_prompt_2.patch] Restore the second call, removed
	by the previous patch, to mark_input().

	8. [lamkins_completion_reset.patch] Reset the completion marks at
	each prompt. This prevents the jump-to-end-of-completion key (ESC)
	from jumping to the end of a previous completion if no completion
	has been initiated at the current input.

	9. [lamkins_move_by_prompt.patch] Bind Alt-PageUp and Alt-PageDown
	to move backward and forward by APL prompt through the transcript.

	10. [lamkins_completion_reset_2.patch] Check that completion marks
	exist before attempting to move them.

	11. [lamkins_move_by_prompt_2.patch] Don't let move-by-prompt get
	blocked by zero-length lines.

	12. [lamkins_status_draw.patch] Correct an issue in which the
	transcript could be drawn improperly when the status line is
	displayed.

2014-09-14  Chris Moller  <moller@mollerware.com>

	* aplio.c (update_pstat_strings): Force initial values into pstat
	info dialogue.

	* menu.c (ps_button_cb): Prevent multiple pstat info dialogues.

2014-09-13  Chris Moller  <moller@mollerware.com>

	* menu.c (ps_button_cb): Added a pstat popup.

2014-09-12  Chris Moller  <moller@mollerware.com>

	* resources.c (restore_resources): Save and restore resources.

	* menu.c (ps_toggle_cb): Added a toggle for the pstat line.

	* aplio.c (apl_read_sockid): forced a null-term in call-back.

2014-09-11  Chris Moller  <moller@mollerware.com>

	* options.c (]): Added a --version flag.

	* aplio.c (apl_read_plot_pipe): Added embedded plot capability.

	* apl.c (apl_spawn): Added -f option to pass a script to APL.

2014-09-09  Chris Moller  <moller@mollerware.com>

	* apl.c (apl_spawn): Fixed emacs_arg.

2014-09-08  Chris Moller  <moller@mollerware.com>

	* edit.c (set_status_line): Added a status line showing
	modification and position.

	* txtbuf.c (tagged_insert): Added filter for invalid UTF8 chars.
	(tagged_insert): Added filter for unprintable chars.  Also catch
	the ASCII BEL character and call gdk_beep().  For reasons I don't
	know, it doesn't actually beep.
	(tagged_insert): Little bug fix.

	* aplio.c (apl_read_out): Removed some commented-out diagnostic code.

2014-09-07  Chris Moller  <moller@mollerware.com>

	* edit.c (build_edit_menubar): Renamed "Save File" to "Export File".

	* aplio.c (send_apl): Added convenience wrapper to send().  (Also
	affected fcns in edit.c and menu.c.)

2014-08-31  Chris Moller  <moller@mollerware.com>

	* menu.c (open_object_cb): Put open list inside a scrolled
	window.  Also sorted the list.

2014-08-30  Chris Moller  <moller@mollerware.com>

	* apl.c (make_env): Fixed a g_malloc mug.
	* edit.c (clone_object): Added clone.
	(build_edit_menubar): Added save to file.
	* edit.c (edit_object): Cleaned up a lot of stuff in shared buffer
	stuff. 

2014-08-29  Chris Moller  <moller@mollerware.com>

	* edit.c: Added multi-window stuff.

	* menu.c (open_object_cb): Temporarily remove variable edit.

2014-08-28  Chris Moller  <moller@mollerware.com>

	* menu.c (file_button_press_cb): Add double-click select/accept.
	* aplwrap.c (main): Add main window title.
	* edit.c (edit_save_cb): New capability: nascent editor
	* edit.c (edit_object): Add edit window title.
	(edit_variable_cb): Add edit-variable framework.

2014-08-25  Chris Moller  <moller@mollerware.com>

	* menu.c (save_log_fer_real): Add "Save Log" capability.

	* apl.c (apl_spawn): Made apl_argv dynamic.

2014-08-17  Chris Moller  <moller@mollerware.com>

	* aplwrap.c (key_press_event): Make ctrl-Windows equivalent to
	ctrl-Break in interrupting APL.

2014-08-16  Chris Moller  <moller@mollerware.com>

	* aplwrap.c (main): Fixed option parsing.
	(key_press_event): Make the keypad Enter key synonymous with the
	main Ennter key.
	(apl_read_out and apl_read_out): Fixes to the read loops.
	(key_press_event): Fixes for spurious newlines.
	(main): More input fixes by David Lamkins.

2014-08-15  Chris Moller  <moller@mollerware.com>

	* aplwrap.c: Might as well start keeping track of the changes,
	just like a real project does...

